{"version":3,"sources":["components/Household.tsx","lib/formatDate.ts","lib/formatMoney.ts","components/Daily.tsx","lib/formatRoman.ts","components/Expense.tsx","components/Form.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Wrapper","styled","div","HouseholdTable","table","Household","children","formatDate","date","substr","formatMoney","money","toString","replace","IndexTd","td","GreenTd","props","align","LimeTd","minus","Daily","index","income","total","rowSpan","length","colSpan","formatRoman","num","a","roman","romanNumList","M","CM","D","CD","C","XC","L","XV","X","IX","V","IV","I","key","Math","floor","i","tr","RemoveButton","YellowTd","Expense","id","name","price","place","onRemove","onClick","useStyles","makeStyles","theme","createStyles","textField","maxWidth","button","marginTop","spacing","Form","data","setData","useState","Date","setDate","setName","setPrice","setPlace","classes","utils","DateFnsUtils","locale","koLocale","autoOk","variant","inputVariant","margin","fullWidth","className","format","label","value","onChange","TextField","e","target","InputProps","endAdornment","InputAdornment","position","Button","isNaN","Number","year","getFullYear","month","String","getMonth","day","getDate","strDate","selectDataIndex","findIndex","daily","maxId","reduce","acc","maxDailyId","expenses","expense","filteredData","filter","selectData","push","handleAdd","color","Container","App","initialData","sortedData","sort","b","map","sortedExpenses","handleRemove","removedData","idx","cur","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6368360b.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  flex: 1;\n`;\n\nconst HouseholdTable = styled.table`\n  width: 100%;\n`;\n\ntype HouseholdProps = {\n  children: JSX.Element[];\n};\n\nexport default function Household({ children }: HouseholdProps) {\n  return (\n    <Wrapper>\n      <HouseholdTable>\n        <caption>가계부</caption>\n        {children}\n      </HouseholdTable>\n    </Wrapper>\n  );\n}\n","const formatDate = (date: string): string => {\n  const year = date.substr(0, 4);\n  const month = date.substr(4, 2);\n  const day = date.substr(6, 2);\n  return year + \"/\" + month + \"/\" + day;\n};\n\nexport default formatDate;\n","const formatMoney = (money: number): string =>\n  money.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\nexport default formatMoney;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport formatDate from \"../lib/formatDate\";\nimport formatMoney from \"../lib/formatMoney\";\n\nconst IndexTd = styled.td`\n  background: #0000ff;\n  color: #ffffff;\n  text-align: center;\n`;\n\nconst GreenTd = styled.td`\n  background: #00ff00;\n  color: #000000;\n  text-align: ${props => props.align};\n`;\n\ntype LimeTdPropsType = {\n  minus?: boolean;\n};\n\nconst LimeTd = styled.td<LimeTdPropsType>`\n  background: #a3dd08;\n  color: ${props => (props.minus ? \"#FF0000\" : \"#000000\")};\n  text-align: ${props => props.align};\n`;\n\ntype DailyProps = {\n  index: number;\n  date: string;\n  income: number;\n  total: number;\n  children: JSX.Element[];\n};\n\nexport default function Daily({\n  index,\n  date,\n  income,\n  total,\n  children\n}: DailyProps) {\n  return (\n    <tbody>\n      <tr>\n        <IndexTd rowSpan={children.length + 5}>{index}</IndexTd>\n        <GreenTd align=\"center\">날짜:{formatDate(date)}</GreenTd>\n        <GreenTd align=\"center\">수입</GreenTd>\n        <GreenTd align=\"left\" colSpan={2}>\n          {formatMoney(income)}\n        </GreenTd>\n      </tr>\n      <tr>\n        <GreenTd align=\"center\">번호</GreenTd>\n        <GreenTd align=\"center\">품목</GreenTd>\n        <GreenTd align=\"center\">가격</GreenTd>\n        <GreenTd align=\"center\">구입처</GreenTd>\n      </tr>\n      {children}\n      <tr>\n        <LimeTd align=\"center\">개수</LimeTd>\n        <LimeTd align=\"left\" colSpan={3}>\n          {children.length}\n        </LimeTd>\n      </tr>\n      <tr>\n        <LimeTd align=\"center\">총지출</LimeTd>\n        <LimeTd align=\"left\" colSpan={3}>\n          {formatMoney(total)}\n        </LimeTd>\n      </tr>\n      <tr>\n        <LimeTd align=\"center\">잔액</LimeTd>\n        <LimeTd align=\"left\" colSpan={3} minus={income < total}>\n          {income < total ? \"[적자]\" : null}\n          {formatMoney(income - total)}\n        </LimeTd>\n      </tr>\n    </tbody>\n  );\n}\n","const formatRoman = (num: number): string => {\n  let roman = \"\";\n  const romanNumList: { [key: string]: number } = {\n    M: 1000,\n    CM: 900,\n    D: 500,\n    CD: 400,\n    C: 100,\n    XC: 90,\n    L: 50,\n    XV: 40,\n    X: 10,\n    IX: 9,\n    V: 5,\n    IV: 4,\n    I: 1\n  };\n  let a;\n  for (let key in romanNumList) {\n    a = Math.floor(num / romanNumList[key]);\n    if (a >= 0) {\n      for (let i = 0; i < a; i++) {\n        roman += key;\n      }\n    }\n    num = num % romanNumList[key];\n  }\n\n  return roman;\n};\n\nexport default formatRoman;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport formatRoman from \"../lib/formatRoman\";\nimport formatMoney from \"../lib/formatMoney\";\n\nconst Wrapper = styled.tr``;\n\nconst RemoveButton = styled.div`\n  color: #ff0000;\n  float: right;\n  margin: 0;\n  padding: 0;\n  cursor: pointer;\n  display: none;\n  ${Wrapper}:hover & {\n    display: block;\n  }\n`;\n\nconst YellowTd = styled.td`\n  background: #ffff00;\n  color: #000000;\n  text-align: ${props => props.align};\n`;\n\ntype ExpenseProps = {\n  id: number;\n  index: number;\n  name: string;\n  price: number;\n  place: string;\n  onRemove: (id: number) => void;\n};\n\nexport default function Expense({\n  id,\n  index,\n  name,\n  price,\n  place,\n  onRemove\n}: ExpenseProps) {\n  return (\n    <Wrapper>\n      <YellowTd align=\"center\">{formatRoman(index)}.</YellowTd>\n      <YellowTd align=\"left\">{name}</YellowTd>\n      <YellowTd align=\"left\">{formatMoney(price)}</YellowTd>\n      <YellowTd align=\"left\">\n        {place}\n        <RemoveButton onClick={() => onRemove(id)}>&times;</RemoveButton>\n      </YellowTd>\n    </Wrapper>\n  );\n}\n","import React, { useState } from \"react\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport koLocale from \"date-fns/locale/ko\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from \"@material-ui/pickers\";\nimport { TextField, InputAdornment, Button } from \"@material-ui/core\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  flex: 1;\n  text-align: center;\n`;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    textField: {\n      maxWidth: 300\n    },\n    button: {\n      marginTop: theme.spacing(3),\n      maxWidth: 300\n    }\n  })\n);\n\ntype Data = {\n  date: string;\n  income: number;\n  expenses: {\n    id: number;\n    name: string;\n    price: number;\n    place: string;\n  }[];\n}[];\n\ntype FormProps = {\n  data: Data;\n  setData: (data: Data) => void;\n};\n\nexport default function Form({ data, setData }: FormProps) {\n  const [date, setDate] = useState<Date | null>(new Date());\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [place, setPlace] = useState(\"\");\n  const classes = useStyles();\n\n  const handleAdd = (): void => {\n    if (!date) {\n      // 오류\n      return;\n    }\n    if (isNaN(Number(price))) {\n      // 오류\n      return;\n    }\n\n    const year = date.getFullYear().toString();\n    const month = String(date.getMonth() + 1);\n    const day = date.getDate().toString();\n\n    const strDate =\n      year + (month[1] ? month : \"0\" + month) + (day[1] ? day : \"0\" + day);\n\n    const selectDataIndex = data.findIndex(daily => daily.date === strDate);\n\n    const maxId = data.reduce((acc, daily) => {\n      const maxDailyId = daily.expenses.reduce(\n        (acc, expense) => (expense.id > acc ? expense.id : acc),\n        0\n      );\n      return acc > maxDailyId ? acc : maxDailyId;\n    }, 0);\n\n    if (selectDataIndex === -1) {\n      setData([\n        ...data,\n        {\n          date: strDate,\n          income: 0,\n          expenses: [\n            {\n              id: maxId + 1,\n              name,\n              price: Number(price),\n              place\n            }\n          ]\n        }\n      ]);\n    } else {\n      const filteredData = data.filter(daily => daily.date !== strDate);\n      const selectData = data[selectDataIndex];\n      selectData.expenses.push({\n        id: maxId + 1,\n        name,\n        price: Number(price),\n        place\n      });\n      setData([...filteredData, selectData]);\n    }\n    setName(\"\");\n    setPrice(\"\");\n    setPlace(\"\");\n  };\n\n  return (\n    <Wrapper>\n      <MuiPickersUtilsProvider utils={DateFnsUtils} locale={koLocale}>\n        <KeyboardDatePicker\n          autoOk\n          variant=\"inline\"\n          inputVariant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          className={classes.textField}\n          format=\"yyyy/MM/dd\"\n          label=\"날짜\"\n          value={date}\n          onChange={(date: Date | null) => setDate(date)}\n        />\n      </MuiPickersUtilsProvider>\n      <br />\n      <TextField\n        variant=\"outlined\"\n        margin=\"normal\"\n        fullWidth\n        className={classes.textField}\n        label=\"품목\"\n        value={name}\n        onChange={e => setName(e.target.value)}\n      />\n      <br />\n      <TextField\n        variant=\"outlined\"\n        margin=\"normal\"\n        fullWidth\n        className={classes.textField}\n        label=\"가격\"\n        value={price}\n        onChange={e => setPrice(e.target.value)}\n        InputProps={{\n          endAdornment: <InputAdornment position=\"end\">원</InputAdornment>\n        }}\n      />\n      <br />\n      <TextField\n        variant=\"outlined\"\n        margin=\"normal\"\n        fullWidth\n        className={classes.textField}\n        label=\"구입처\"\n        value={place}\n        onChange={e => setPlace(e.target.value)}\n      />\n      <br />\n      <Button\n        onClick={() => handleAdd()}\n        variant=\"contained\"\n        color=\"primary\"\n        fullWidth\n        className={classes.button}\n      >\n        추가\n      </Button>\n    </Wrapper>\n  );\n}\n","import React, { useState } from \"react\";\nimport { data as initialData } from \"./lib/data.json\";\nimport styled from \"styled-components\";\n\n// components\nimport Household from \"./components/Household\";\nimport Daily from \"./components/Daily\";\nimport Expense from \"./components/Expense\";\nimport Form from \"./components/Form\";\n\nconst Container = styled.div`\n  display: flex;\n`;\n\nfunction App() {\n  const [data, setData] = useState(initialData);\n\n  const sortedData = data\n    .sort((a, b) => {\n      // 날짜별 정렬\n      if (a.date > b.date) return 1;\n      else if (b.date > a.date) return -1;\n      else return 0;\n    })\n    .map(daily => {\n      const sortedExpenses = daily.expenses.sort((a, b) => {\n        // 구입처별 내림차순 정렬\n        if (a.place > b.place) return -1;\n        else if (b.place > a.place) return 1;\n        else return 0;\n      });\n      return {\n        ...daily,\n        expenses: sortedExpenses\n      };\n    });\n\n  const handleRemove = (id: number): void => {\n    const removedData = data.map(daily => {\n      return {\n        ...daily,\n        expenses: daily.expenses.filter(expense => expense.id !== id)\n      };\n    });\n\n    setData(removedData);\n  };\n\n  return (\n    <Container>\n      <Household>\n        {sortedData.map((daily, idx) => (\n          <Daily\n            key={idx}\n            index={idx + 1}\n            date={daily.date}\n            income={daily.income}\n            total={daily.expenses.reduce((acc, cur) => acc + cur.price, 0)}\n          >\n            {daily.expenses.map((expense, idx) => (\n              <Expense\n                key={idx}\n                id={expense.id}\n                index={idx + 1}\n                name={expense.name}\n                price={expense.price}\n                place={expense.place}\n                onRemove={handleRemove}\n              />\n            ))}\n          </Daily>\n        ))}\n      </Household>\n      <Form data={data} setData={setData} />\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}